version: "3.9"

services:
  mysql:
    image: mysql:8.0.36
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - "${MYSQL_PORT_OUT}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend_net

  mongo:
    image: mongo:7.0
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    ports:
      - "${MONGO_PORT_OUT}:27017"
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend_net

  backend:
    build: ./backend
    container_name: backend-container
    environment:
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_PORT: ${MYSQL_PORT}
      MYSQL_DB: ${MYSQL_DB}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_SSL_MODE: ${MYSQL_SSL_MODE}
      MONGO_URI: ${MONGO_URI}
    depends_on:
      mysql:
        condition: service_healthy
      mongo:
        condition: service_healthy
    ports:
      - "${BACKEND_PORT}:8080"
    networks:
      - backend_net
      - frontend_net   # so frontend can reach backend

  frontend:
    build: ./frontend
    container_name: frontend-container
    environment:
      # React app must use backend service name (backend:8080)
      REACT_APP_API_URL: http://backend:8080
    depends_on:
      - backend
    ports:
      - "${FRONTEND_PORT}:80"   # Nginx runs on 80
    networks:
      - frontend_net

volumes:
  mysql_data:
  mongo_data:

networks:
  backend_net:
    driver: bridge
  frontend_net:
    driver: bridge



#
## =======================
## Database credentials
## =======================
#  MYSQL_ROOT_PASSWORD=Test@123
#  MYSQL_DATABASE=employees_db
#
#  # =======================
#  # Spring Boot backend
#  # =======================
#  MYSQL_USER=root
#  MYSQL_PASSWORD=Test@123
#  MYSQL_HOST=mysql
#  MYSQL_PORT=3306
#  MYSQL_DB=employees_db
#  MYSQL_SSL_MODE=DISABLED
#
#  # =======================
#  # Ports
#  # =======================
#  BACKEND_PORT=8080
#  FRONTEND_PORT=3000
#  MYSQL_PORT_OUT=3306
#  MONGO_PORT_OUT=27017
#
#  MONGO_URI=mongodb://mongo:27017/employees_db
#
#
#
#
#







































#version: "3.9"
#
#services:
#  mysql:
#    image: mysql:8.0
#    container_name: mysql-container
#    environment:
#      MYSQL_ROOT_PASSWORD: Test@123
#      MYSQL_DATABASE: employee_db
#    ports:
#      - "3306:3306"
#    networks:
#      - emp-net
#    volumes:
#      - mysql_data:/var/lib/mysql
#    healthcheck:
#      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
#      interval: 10s
#      timeout: 5s
#      retries: 5
#
#  mongo:
#    image: mongo:7.0
#    container_name: mongo-container
#    environment:
#      MONGO_INITDB_DATABASE: employee_db
#    ports:
#      - "27017:27017"
#    networks:
#      - emp-net
#    volumes:
#      - mongo_data:/data/db
#    healthcheck:
#      test: ["CMD-SHELL", "mongosh --eval 'db.adminCommand(\"ping\")' || exit 1"]
#      interval: 10s
#      timeout: 5s
#      retries: 5
#
#  backend:
#    image: aadus/employee-management-backend:v1
#    container_name: backend-container
#    environment:
#      # --- MySQL ---
#      MYSQL_HOST: mysql
#      MYSQL_PORT: 3306
#      MYSQL_DB: employee_db
#      MYSQL_USER: root
#      MYSQL_PASSWORD: Test@123
#      MYSQL_SSL_MODE: DISABLED
#
#      # --- MongoDB ---
#      MONGO_URI: mongodb://mongo:27017/employee_db
#    ports:
#      - "8080:8080"
#    depends_on:
#      mysql:
#        condition: service_healthy
#      mongo:
#        condition: service_healthy
#    networks:
#      - emp-net
#
#  frontend:
#    image: aadus/employee-management-frontend:v1
#    container_name: frontend-container
#    environment:
#      REACT_APP_API_URL: http://localhost:8080  # ðŸ‘ˆ API endpoint backend
#    ports:
#      - "3000:80"
#    depends_on:
#      - backend
#    networks:
#      - emp-net
#
#networks:
#  emp-net:
#    driver: bridge
#
#volumes:
#  mysql_data:
#  mongo_data:



