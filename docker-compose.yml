version: "3.9"

services:
  mysql:
    image: mysql:8.0
    container_name: mysql-container
    environment:
      MYSQL_ROOT_PASSWORD: Test@123
      MYSQL_DATABASE: employee_db
    ports:
      - "3306:3306"
    networks:
      - emp-net
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongo:
    image: mongo:7.0
    container_name: mongo-container
    environment:
      MONGO_INITDB_DATABASE: employee_db
    ports:
      - "27017:27017"
    networks:
      - emp-net
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD-SHELL", "mongosh --eval 'db.adminCommand(\"ping\")' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    image: aadus/employee-management-backend:v1
    container_name: backend-container
    environment:
      # --- MySQL ---
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DB: employee_db
      MYSQL_USER: root
      MYSQL_PASSWORD: Test@123
      MYSQL_SSL_MODE: DISABLED

      # --- MongoDB ---
      MONGO_URI: mongodb://mongo:27017/employee_db
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
      mongo:
        condition: service_healthy
    networks:
      - emp-net

  frontend:
    image: aadus/employee-management-frontend:v1
    container_name: frontend-container
    environment:
      REACT_APP_API_URL: http://localhost:8080  # ðŸ‘ˆ API endpoint backend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - emp-net

networks:
  emp-net:
    driver: bridge

volumes:
  mysql_data:
  mongo_data:
