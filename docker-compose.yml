version: "3.9"

services:
  mysql:
    image: mysql:8.0.36
    container_name: mysql-container
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - "${MYSQL_PORT_OUT}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend_net

  mongo:
    image: mongo:7.0
    container_name: mongo-container
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    ports:
      - "${MONGO_PORT_OUT}:27017"
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend_net

  backend:
    build: ./backend
    container_name: backend-container
    environment:
      MYSQL_HOST: mysql   # ✅ service name instead of localhost
      MYSQL_PORT: 3306
      MYSQL_DB: ${MYSQL_DB}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      #MYSQL_SSL_MODE: ${MYSQL_SSL_MODE}
      MONGO_URI: mongodb://mongo:27017/${MONGO_DATABASE}  # ✅ service name
    depends_on:
      mysql:
        condition: service_healthy
      mongo:
        condition: service_healthy
    ports:
      - "${BACKEND_PORT}:8080"
    networks:
      - backend_net
      - frontend_net

  frontend:
    build: ./frontend
    container_name: frontend-container
    environment:
      # ✅ use backend service name, not localhost
      REACT_APP_API_URL: http://backend:8080
    depends_on:
      - backend
    ports:
      - "${FRONTEND_PORT}:80"   # Nginx runs on port 80 inside container
    networks:
      - frontend_net

volumes:
  mysql_data:
  mongo_data:

networks:
  backend_net:
    driver: bridge
  frontend_net:
    driver: bridge
